{"ast":null,"code":"import _classCallCheck from \"F:\\\\React & Node\\\\weatherApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\React & Node\\\\weatherApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\React & Node\\\\weatherApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\React & Node\\\\weatherApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\React & Node\\\\weatherApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\React & Node\\\\weatherApp\\\\src\\\\barGraph\\\\barGraph.js\";\nimport React, { Component } from 'react';\nimport { VictoryChart } from 'victory';\nimport { VictoryLine } from 'victory';\nimport { VictoryAxis } from 'victory';\nimport { VictoryBar } from 'victory';\n\nvar BarGraph =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BarGraph, _Component);\n\n  function BarGraph(props) {\n    var _this;\n\n    _classCallCheck(this, BarGraph);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BarGraph).call(this, props));\n    _this.state = {\n      temp: []\n    };\n    return _this;\n  }\n\n  _createClass(BarGraph, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(city) {\n      fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&appid=1685bde351f4760e5c742a11817431a6\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(VictoryChart, {\n        domainPadding: {\n          x: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(VictoryBar, {\n        barRatio: 0.4,\n        cornerRadius: 10,\n        height: 200,\n        animate: {\n          duration: 2000,\n          onLoad: {\n            duration: 1000\n          }\n        },\n        data: [{\n          experiment: \"Shanghai\",\n          expected: 3.75,\n          actual: 3.21\n        }, {\n          experiment: \"London\",\n          expected: 3.75,\n          actual: 3.38\n        }, {\n          experiment: \"Mumbai\",\n          expected: 3.75,\n          actual: 2.05\n        }, {\n          experiment: \"California\",\n          expected: 3.75,\n          actual: 3.71\n        }, {\n          experiment: \"Kathmandu\",\n          expected: 3.75,\n          actual: 3.71\n        }],\n        x: \"experiment\",\n        y: function y(d) {\n          return d.actual / d.expected * 100;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), React.createElement(VictoryAxis, {\n        label: \"Cities\",\n        style: {\n          axisLabel: {\n            padding: 30\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(VictoryAxis, {\n        dependentAxis: true,\n        label: \"percent yield\",\n        height: 400,\n        style: {\n          axisLabel: {\n            padding: 40\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return BarGraph;\n}(Component);\n\nexport default BarGraph;","map":{"version":3,"sources":["F:\\React & Node\\weatherApp\\src\\barGraph\\barGraph.js"],"names":["React","Component","VictoryChart","VictoryLine","VictoryAxis","VictoryBar","BarGraph","props","state","temp","city","fetch","x","duration","onLoad","experiment","expected","actual","d","axisLabel","padding"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,SAASC,UAAT,QAA2B,SAA3B;;IAEMC,Q;;;;;AACL,oBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACZC,MAAAA,IAAI,EAAE;AADM,KAAb;AAFiB;AAKjB;;;;sCAEiBC,I,EAAK;AACtBC,MAAAA,KAAK,6DAAsDD,IAAtD,6CAAL;AACA;;;6BACO;AACP,aACC,oBAAC,YAAD;AACC,QAAA,aAAa,EAAE;AAACE,UAAAA,CAAC,EAAE;AAAJ,SADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEK,oBAAC,UAAD;AACE,QAAA,QAAQ,EAAE,GADZ;AAEE,QAAA,YAAY,EAAE,EAFhB;AAGE,QAAA,MAAM,EAAE,GAHV;AAIE,QAAA,OAAO,EAAE;AACXC,UAAAA,QAAQ,EAAE,IADC;AAEXC,UAAAA,MAAM,EAAE;AAAED,YAAAA,QAAQ,EAAE;AAAZ;AAFG,SAJX;AAQE,QAAA,IAAI,EAAE,CACJ;AAAEE,UAAAA,UAAU,EAAE,UAAd;AAA0BC,UAAAA,QAAQ,EAAE,IAApC;AAA0CC,UAAAA,MAAM,EAAE;AAAlD,SADI,EAEJ;AAAEF,UAAAA,UAAU,EAAE,QAAd;AAAwBC,UAAAA,QAAQ,EAAE,IAAlC;AAAwCC,UAAAA,MAAM,EAAE;AAAhD,SAFI,EAGJ;AAAEF,UAAAA,UAAU,EAAE,QAAd;AAAwBC,UAAAA,QAAQ,EAAE,IAAlC;AAAwCC,UAAAA,MAAM,EAAE;AAAhD,SAHI,EAIJ;AAAEF,UAAAA,UAAU,EAAE,YAAd;AAA4BC,UAAAA,QAAQ,EAAE,IAAtC;AAA4CC,UAAAA,MAAM,EAAE;AAApD,SAJI,EAKJ;AAAEF,UAAAA,UAAU,EAAE,WAAd;AAA2BC,UAAAA,QAAQ,EAAE,IAArC;AAA2CC,UAAAA,MAAM,EAAE;AAAnD,SALI,CARR;AAeE,QAAA,CAAC,EAAC,YAfJ;AAgBE,QAAA,CAAC,EAAE,WAACC,CAAD;AAAA,iBAAQA,CAAC,CAACD,MAAF,GAAWC,CAAC,CAACF,QAAd,GAA0B,GAAjC;AAAA,SAhBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFL,EAoBK,oBAAC,WAAD;AACE,QAAA,KAAK,EAAC,QADR;AAEE,QAAA,KAAK,EAAE;AACLG,UAAAA,SAAS,EAAE;AAAEC,YAAAA,OAAO,EAAE;AAAX;AADN,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApBL,EA2BK,oBAAC,WAAD;AAAa,QAAA,aAAa,MAA1B;AACE,QAAA,KAAK,EAAC,eADR;AAEE,QAAA,MAAM,EAAE,GAFV;AAGE,QAAA,KAAK,EAAE;AACLD,UAAAA,SAAS,EAAE;AAAEC,YAAAA,OAAO,EAAE;AAAX;AADN,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA3BL,CADD;AAuCA;;;;EAnDqBnB,S;;AAsDvB,eAAeK,QAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { VictoryChart } from 'victory';\r\nimport { VictoryLine } from 'victory';\r\nimport { VictoryAxis } from 'victory';\r\nimport { VictoryBar } from 'victory';\r\n\r\nclass BarGraph extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttemp: [],\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount(city){\r\n\t\tfetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=1685bde351f4760e5c742a11817431a6`);\r\n\t}\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<VictoryChart \r\n\t\t\t\tdomainPadding={{x: 40}}>\r\n\t\t\t\t    <VictoryBar\r\n\t\t\t\t      barRatio={0.4}\r\n\t\t\t\t      cornerRadius={10}\r\n\t\t\t\t      height={200}\r\n\t\t\t\t      animate={{\r\n\t\t\t\t\t\t  duration: 2000,\r\n\t\t\t\t\t\t  onLoad: { duration: 1000 }\r\n\t\t\t\t\t  }}\r\n\t\t\t\t      data={[\r\n\t\t\t\t        { experiment: \"Shanghai\", expected: 3.75, actual: 3.21 },\r\n\t\t\t\t        { experiment: \"London\", expected: 3.75, actual: 3.38 },\r\n\t\t\t\t        { experiment: \"Mumbai\", expected: 3.75, actual: 2.05 },\r\n\t\t\t\t        { experiment: \"California\", expected: 3.75, actual: 3.71 },\r\n\t\t\t\t        { experiment: \"Kathmandu\", expected: 3.75, actual: 3.71 }\r\n\t\t\t\t      ]}\r\n\t\t\t\t      x=\"experiment\"\r\n\t\t\t\t      y={(d) => (d.actual / d.expected) * 100}\r\n\t\t\t\t    />\r\n\t\t\t\t    <VictoryAxis\r\n\t\t\t\t      label=\"Cities\"\r\n\t\t\t\t      style={{\r\n\t\t\t\t        axisLabel: { padding: 30 }\r\n\t\t\t\t      }}\r\n\t\t\t\t    />\r\n\r\n\t\t\t\t    <VictoryAxis dependentAxis\r\n\t\t\t\t      label=\"percent yield\"\r\n\t\t\t\t      height={400}\r\n\t\t\t\t      style={{\r\n\t\t\t\t        axisLabel: { padding: 40 }\r\n\t\t\t\t      }}\r\n\r\n\t\t\t\t    />\r\n\t\t\t</VictoryChart>\r\n\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default BarGraph;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}